#
# GitHub actions to build and test python-package.
#
# Don't use `-latest` for targeted VMs, pin specific OS versions instead.
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
#
# When setting up for a tmate debug session, you might need to increase the
# timeout-minutes for each build. Else you get kicked out after the timeout.

name: Bare

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: bare-${{ github.ref }}
  cancel-in-progress: true

env:
  TMATE_DEBUG: 'yes'

jobs:

  linux:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ ubuntu-20.04, ubuntu-18.04 ]
    timeout-minutes: 30
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    # Caches needed files for a faster deps phase.
    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          build-python-package
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}

    - name: Prepare OS
      run: sudo apt-get install libncurses5-dev

    - name: Detect current OS
      run: ./brink.sh detect_os

    - name: Build Python
      run: ./chevah_build build

    - name: Test Python
      run: ./chevah_build test

    - name: Test Compat
      run: ./chevah_build test_compat

    # Upload using a (per-OS selected) sftp command, then show final links.
    - name: Upload testing package
      run: |
        mkdir -pv ~/.ssh/
        touch priv_key
        chmod 600 priv_key
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~/.ssh/known_hosts
        ./publish_dist.sh
        rm priv_key

    # If one of the above steps fails, fire up tmate for remote debugging.
    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true


  macos:
    runs-on: macos-10.15
    needs: [ windows, linux ]
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          build-python-package
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}

    - name: Detect current OS
      run: ./brink.sh detect_os

    # Avoid linking to Homebrew's libintl during build.
    # We can use needed tools from /usr/bin.
    - name: Hack Homebrew
      run: |
        sudo find /usr/local -name 'libffi*' -exec chmod a-r {} +
        sudo find /usr/local -name 'libintl*' -exec chmod a-r {} +
        sudo rm -f /usr/local/bin/{wget,curl,git}

    - name: Build Python
      run: ./chevah_build build

    # Fix back Homebrew, to make everything functional.
    - name: Unhack Homebrew
      if: failure() && env.TMATE_DEBUG == 'yes'
      run: |
        sudo find /usr/local -name 'libintl*' -exec chmod a+r {} +
        sudo find /usr/local -name 'libffi*' -exec chmod a+r {} +

    - name: Test Python
      run: ./chevah_build test

    - name: Test Compat
      run: ./chevah_build test_compat

    - name: Upload testing package
      run: |
        mkdir -pv ~/.ssh/
        touch priv_key
        chmod 600 priv_key
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~/.ssh/known_hosts
        ./publish_dist.sh
        rm priv_key

    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true


  windows:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      # Workflow won't be cancelled at the first failed job.
      fail-fast: false
      matrix:
        runs-on: [ windows-2019, windows-2016 ]
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          build-python-package
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}

    # Add packages needed to build OpenSSL (this runs under PowerShell).
    - name: Prepare OS
      run: |
        chocolatey install --yes --no-progress make nasm 7zip
        # There's no vcpython27 choco pkg since Microsoft removed the installer.
        start-bitstransfer https://binary.chevah.com/third-party-stuff/VCForPython27.msi
        msiexec /quiet /i VCForPython27.msi

    # Explicitly run our scripts with Bash, not PowerShell (GitHub's default).
    - name: Detect current OS
      run: bash ./brink.sh detect_os

    - name: Build Python
      run: bash ./chevah_build build

    - name: Test Python
      run: bash ./chevah_build test

    - name: Test Compat
      run: bash ./chevah_build test_compat

    # To use an RSA key with SFTPPlus, install upstream OpenSSH package,
    # which is more finicky in regards to file permissions.
    # Beware the commands in this step run under PowerShell.
    - name: Prepare SFTP upload
      run: |
        mkdir -p ~/.ssh/
        touch priv_key
        icacls .\priv_key /inheritance:r
        icacls .\priv_key /grant:r runneradmin:"(F)"
        echo "${{ secrets.SFTPPLUS_BIN_PRIV_KEY }}" > priv_key
        echo "${{ secrets.SFTPPLUS_BIN_HOST_KEY }}" > ~/.ssh/known_hosts
        choco install --yes --no-progress openssh

    # Upload using a (per-OS selected) sftp command, then show final links.
    - name: Upload testing package
      run: |
        bash ./publish_dist.sh
        rm priv_key

    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
