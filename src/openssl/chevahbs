#!/usr/bin/env bash
#
# Chevah Build Script for OpenSSL.

# Import shared code.
. ./functions.sh


chevahbs_configure() {
    case $OS in
        win*)
            echo "Nothing to configure on Windows."
            ;;
        *)
            # Static builds only, so that we don't have to mess with LIBPATH.
            CONF_OPTS="no-shared"
            # OpenSSL's build requires an absolute path for --prefix,
            # so we don't use --prefix="" as in the other chevahbs scripts.
            execute ./config --prefix="$INSTALL_FOLDER" $CONF_OPTS
            ;;
    esac
}


chevahbs_compile() {
    # On AIX, OpenSSL's tests have an ~1/6 chance of passing.
    # Just repeating the tests is not enough, a whole rebuild is needed.
    case $OS in
        win*)
            # VisualStudio 2010 is required but not installable through Chocolatey.
            if [ ! -e '/c/Program Files (x86)/Microsoft SDKs/Windows/v7.1/Bin/SetEnv.Cmd' ]; then
                echo "Visual Studio 2010 seems to be missing."
                exit 201
            fi
            # The included Perl is not good enough.
            export PATH=/c/Strawberry/perl/bin/:$PATH
            # We need a base set of flags because on Windows using MSVC
            # enable-ec_nistp_64_gcc_128 doesn't work as there's no 128-bit type
            export OPENSSL_BUILD_FLAGS_WINDOWS="no-ssl3 no-ssl3-method no-zlib no-shared no-comp no-dynamic-engine"
            export OPENSSL_BUILD_FLAGS="${OPENSSL_BUILD_FLAGS_WINDOWS} enable-ec_nistp_64_gcc_128"
            # Build with VisualStudio 2010 using BATs from pyca/infra.
            cmd < ../../src/openssl/win_${ARCH}_2010.bat
            ;;
        aix*)
            for i in $(seq 1 20); do
                echo "OpenSSL build ROUND ${i}..."
                execute $MAKE
                $MAKE test
                tests_error_code=$?
                if [ $tests_error_code -eq 0 ]; then
                    echo "OpenSSL tests were SUCCESSFUL in ROUND ${i}."
                    break
                else
                    execute $MAKE clean
                fi
            done
            if [ $tests_error_code -ne 0 ]; then
                echo "OpenSSL tests failed $i times in a row."
                exit 202
            fi
            ;;
        *)
            execute $MAKE
            execute $MAKE test
            ;;
    esac
}


chevahbs_install() {
    case $OS in
        win*)
            echo "Libs/headers installed through the build BAT file."
            ;;
        *)
            install_folder=$1
            execute $MAKE install
            ;;
    esac
}


select_chevahbs_command $@
