.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ui_compat 3"
.TH ui_compat 3 "2016-05-03" "LibreSSL " "LibreSSL"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
des_read_password, des_read_2passwords, des_read_pw_string, des_read_pw \-
Compatibility user interface functions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& #include <openssl/des_old.h>
\&
\& int des_read_password(DES_cblock *key,const char *prompt,int verify);
\& int des_read_2passwords(DES_cblock *key1,DES_cblock *key2,
\&        const char *prompt,int verify);
\&
\& int des_read_pw_string(char *buf,int length,const char *prompt,int verify);
\& int des_read_pw(char *buf,char *buff,int size,const char *prompt,int verify);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DES\s0 library contained a few routines to prompt for passwords.  These
aren't necessarely dependent on \s-1DES,\s0 and have therefore become part of the
\&\s-1UI\s0 compatibility library.
.PP
\&\fIdes_read_pw()\fR writes the string specified by \fIprompt\fR to standard output
turns echo off and reads an input string from the terminal.  The string is
returned in \fIbuf\fR, which must have spac for at least \fIsize\fR bytes.
If \fIverify\fR is set, the user is asked for the password twice and unless
the two copies match, an error is returned.  The second password is stored
in \fIbuff\fR, which must therefore also be at least \fIsize\fR bytes.  A return
code of \-1 indicates a system error, 1 failure due to use interaction, and
0 is success.  All other functions described here use \fIdes_read_pw()\fR to do
the work.
.PP
\&\fIdes_read_pw_string()\fR is a variant of \fIdes_read_pw()\fR that provides a buffer
for you if \fIverify\fR is set.
.PP
\&\fIdes_read_password()\fR calls \fIdes_read_pw()\fR and converts the password to a
\&\s-1DES\s0 key by calling \fIDES_string_to_key()\fR; \fIdes_read_2password()\fR operates in
the same way as \fIdes_read_password()\fR except that it generates two keys
by using the \fIDES_string_to_2key()\fR function.
.SH "NOTES"
.IX Header "NOTES"
\&\fIdes_read_pw_string()\fR is available in the \s-1MIT\s0 Kerberos library as well, and
is also available under the name \fIEVP_read_pw_string()\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIui\fR\|(3), \fIui_create\fR\|(3)
.SH "AUTHOR"
.IX Header "AUTHOR"
Richard Levitte (richard@levitte.org) for the OpenSSL project
(http://www.openssl.org).
