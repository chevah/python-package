#
# GitHub actions to build and test python-package.
#
# Don't use `-latest` for targeted VMs, pin specific OS versions instead.
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
#
# When setting up for a tmate debug session, you might need to increase the
# timeout-minutes for each build. Else you get kicked out after the timeout.

name: GitHub-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TMATE_DEBUG: 'no'

jobs:

  ubuntu-20-04:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Make sure there are no concurrent jobs
    - uses: chevah/auto-cancel-redundant-job@v1

    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    # Caches needed files for a faster deps phase.
    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          build-python-package
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}

    - name: Prepare OS
      run: sudo apt-get install libncurses5-dev

    - name: Download needed deps for the detected OS
      run: ./brink.sh detect_os

    - name: Build Python
      run: ./chevah_build build

    - name: Test Python
      run: ./chevah_build test

    - name: Test Compat
      run: ./chevah_build test_compat

    # If one of the above steps fails, fire up tmate for remote debugging.
    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2


  macos-10-15:
    runs-on: macos-10.15
    timeout-minutes: 60
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          build-python-package
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}

    - name: Download needed deps for the detected OS
      run: ./brink.sh detect_os

    # Avoid linking to Homebrew's libintl during build.
    # We can use needed tools from /usr/bin.
    - name: Hack Homebrew
      run: |
        sudo find /usr/local -name 'libintl*' -exec chmod a-r {} +
        sudo rm -f /usr/local/bin/{wget,curl,git}

    - name: Build Python
      run: ./chevah_build build

    # Fix back Homebrew, to make everything functional.
    - name: Unhack Homebrew
      run: |
        sudo find /usr/local -name 'libintl*' -exec chmod a+r {} +

    - name: Test Python
      run: ./chevah_build test

    - name: Test Compat
      run: ./chevah_build test_compat

    - name: Tmate debug on failure
      if: failure() && env.TMATE_DEBUG == 'yes'
      uses: mxschmitt/action-tmate@v2


  windows-2019:
    runs-on: windows-2019
    timeout-minutes: 30
    steps:
    - uses: chevah/auto-cancel-redundant-job@v1
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Cache build
      uses: actions/cache@v2
      with:
        path: |
          build-python-package
        key: ${{ runner.os }}-${{ hashFiles('pavement.py') }}

    # Add packages needed to build our patched pycrypto.
    - name: Prepare OS
      run: |
        chocolatey install -y make vcpython27

    # Explicitly run our scripts with Bash, not PowerShell (GitHub's default).
    - name: Download needed deps for the detected OS
      run: bash ./brink.sh detect_os

    - name: Build Python
      run: bash ./chevah_build build

    - name: Test Python
      run: bash ./chevah_build test

    - name: Test Compat
      run: bash ./chevah_build test_compat
