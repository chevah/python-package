#!/usr/bin/env bash
#
# Chevah Build Script for GMP.
#
# Import shared code.
. ./functions.sh


chevahbs_configure() {
    # We want only static build so that we don't have to mess with LIBPATH.
    CONF_OPTS="--disable-shared --enable-static"
    if [ x${ARCH} == x"x64" -o x${ARCH} == x"x86" ]; then
        # Select a "fat binary" build on x86/x64, where optimized low level
        # subroutines are chosen at runtime according to the CPU detected.
        # This means more code, but gives good performance on all chips.
        CONF_OPTS="$CONF_OPTS --enable-fat"
        if [ x${ARCH} == x"x64" ]; then
            # Fix lib relocation error for x64. More details at:
            # https://www.gentoo.org/proj/en/base/amd64/howtos/index.xml?part=1&chap=3#doc_chap7
            CONF_OPTS="$CONF_OPTS --with-pic"
        fi
    fi
    case $OS in
        raspbian*)
            CONF_OPTS="$CONF_OPTS --build=armcortexa8neon-unknown-linux-gnueabihf --with-pic"
        ;;
    esac
    execute ./configure --prefix="" $CONF_OPTS
}


chevahbs_compile() {
    execute $MAKE
    # GMP needs to be checked even after a successful compilation.
    # See its INSTALL file for details.
    execute $MAKE check
}


chevahbs_install() {
    install_folder=$1
    # As with libffi, we copy the files manually to a temporary location and
    # then we get them from there before compiling PyCrypto. We'll also have
    # to instruct the compiler to link against our GMP by augmenting CPPFLAGS
    # with the include's location and LDFLAGS with the location of the libs.
    local temp_folder=$INSTALL_FOLDER/tmp/gmp/
    execute mkdir -p $temp_folder
    execute cp .libs/* $temp_folder
    ranlib $temp_folder/libgmp.a
    execute cp gmp.h $temp_folder

    # We need GMP or MPIR for fast math in PyCrypto. We use GMP because
    # its devs do a better job of supporting exotic platforms such as AIX.
    # $CPPFLAGS and $LDFLAGS already point to these 'include' and 'lib' dirs.
    mkdir -p $INSTALL_FOLDER/include
    mkdir -p $INSTALL_FOLDER/lib
    cp $INSTALL_FOLDER/tmp/gmp/gmp.h $INSTALL_FOLDER/include
    cp $INSTALL_FOLDER/tmp/gmp/libgmp* $INSTALL_FOLDER/lib
}


select_chevahbs_command $@

