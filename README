Python Portable Package
=======================

This code is here to generate a portable Python distribution,

It is used by our Buildbot script to generate and publish binary python
distribution.

Here are the steps used by Buildbot:

* Login on the new platform
* Get code from git
* ./chevah_build build
* ./chevah_build test
* upload to binary dist publishing website.

Use `./chevah_build help` to discover the available commands.


Rebuild Python from your home
---------------------------

If a buildbot is already active for the platform, you can use
`paver test_remote` to rebuild Python distribution on that system,

You will have to wait about 10 minutes after publishing so that the packages
will reach the public server.

Do a testing build (files go in http://binary.chevah.com/testing/python/)::

    paver test_remote NAME_OF_BUILDER

Do a production build
(files go in http://binary.chevah.com/production/python/)::

    paver test_remote NAME_OF_BUILDER --force-upload-production


Patching upstream code
----------------------

To simplify changes management we are keeping the changed we done from upstream
as separate patch files and apply them at build time.

To keep things as simple as possible, each path should target on a specific
change.
With that in mind we can have multiple patches for the same OS.

Here is an example for creating a patch for
src/python/Python-2.7.13/Lib/site.py::

    cd src/python/Python-2.7.13/
    cp Lib/site-hpux.py Lib/site-patched.py
    # Change Lib/site-patched.py as you want then create the diff.
    diff -ru Lib/site.py Lib/site-patched.py
    # Copy the diff result, including the command line into
    # cd src/python/name-of-the.patch
